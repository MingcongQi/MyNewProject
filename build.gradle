plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // AWS SDK v2
    implementation platform('software.amazon.awssdk:bom:2.21.29')
    implementation 'software.amazon.awssdk:lambda'
    implementation 'software.amazon.awssdk:auth'
    
    // HTTP Client
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    
    // JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    
    // Logging
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Task to prepare application for jpackage
task prepareApp(type: Copy) {
    dependsOn bootJar
    from 'build/libs'
    into 'build/jpackage/input'
    include '*.jar'
}

// Task to create Windows executable using jpackage
task createWindowsExe(type: Exec) {
    dependsOn prepareApp
    
    doFirst {
        mkdir 'build/jpackage/output'
    }
    
    commandLine 'jpackage',
        '--input', 'build/jpackage/input',
        '--dest', 'build/jpackage/output',
        '--name', 'LambdaClient',
        '--main-jar', "lambda-client-app-${version}.jar",
        '--type', 'exe',
        '--win-console',
        '--app-version', version,
        '--description', 'Spring Boot Lambda HTTP Client',
        '--vendor', 'Your Company',
        '--copyright', 'Copyright 2024'
}
